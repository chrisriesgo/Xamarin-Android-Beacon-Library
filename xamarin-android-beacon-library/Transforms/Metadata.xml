<metadata>
	<!--
  This sample removes the class: android.support.v4.content.AsyncTaskLoader.LoadTask:
  <remove-node path="/api/package[@name='android.support.v4.content']/class[@name='AsyncTaskLoader.LoadTask']" />
  
  This sample removes the method: android.support.v4.content.CursorLoader.loadInBackground:
  <remove-node path="/api/package[@name='android.support.v4.content']/class[@name='CursorLoader']/method[@name='loadInBackground']" />
  -->
  <!-- Change the Namespace to avoid Type/Namespace name collisions -->
  <attr path="/api/package[@name='org.altbeacon.beacon']" name="managedName">AltBeaconOrg.BoundBeacon</attr>
  <attr path="/api/package[@name='org.altbeacon.beacon.startup']" name="managedName">AltBeaconOrg.BoundBeacon.Startup</attr>
  <attr path="/api/package[@name='org.altbeacon.beacon.simulator']" name="managedName">AltBeaconOrg.BoundBeacon.Simulator</attr>
  <attr path="/api/package[@name='org.altbeacon.beacon.service']" name="managedName">AltBeaconOrg.BoundBeacon.Service</attr>
  <attr path="/api/package[@name='org.altbeacon.beacon.powersave']" name="managedName">AltBeaconOrg.BoundBeacon.Powersave</attr>
  <attr path="/api/package[@name='org.altbeacon.beacon.client']" name="managedName">AltBeaconOrg.BoundBeacon.Client</attr>

  <!-- Have IBeaconIntentProcessor extend mono.android.app.IntentService instead of android.app.IntentService -->
  <attr path="/api/package[@name='org.altbeacon.beacon']/class[@name='BeaconIntentProcessor' and @extends='android.app.IntentService']" name="extends">mono.android.app.IntentService</attr>

  <!-- Hide "private" Property fields -->
  <remove-node path="/api/package[@name='org.altbeacon.beacon']/class[@name='BeaconManager']/field[@name='beaconSimulator']" />
  <remove-node path="/api/package[@name='org.altbeacon.beacon']/class[@name='BeaconManager']/field[@name='dataRequestNotifier']" />
  <remove-node path="/api/package[@name='org.altbeacon.beacon']/class[@name='BeaconManager']/field[@name='distanceModelUpdateUrl']" />
  <remove-node path="/api/package[@name='org.altbeacon.beacon.simulator']/class[@name='StaticBeaconSimulator']/field[@name='beacons']" />

  <!---Rename method that doesn't override the abstract. Create new partial class that does. -->
  <attr path="/api/package[@name='org.altbeacon.beacon.distance']/class[@name='ModelSpecificDistanceUpdater']/method[@name='doInBackground' and count(parameter)=1 and parameter[1][@type='java.lang.Void...']]" name="managedName">_DoInBackground</attr>

  <!-- IBeaconConsumer -->
  <attr path="/api/package[@name='org.altbeacon.beacon']/interface[@name='BeaconConsumer']/method[@name='bindService' and count(parameter)=3 and parameter[1][@type='android.content.Intent'] and parameter[2][@type='android.content.ServiceConnection'] and parameter[3][@type='int']]/parameter[@name='p0']" name="name">intent</attr>
  <attr path="/api/package[@name='org.altbeacon.beacon']/interface[@name='BeaconConsumer']/method[@name='bindService' and count(parameter)=3 and parameter[1][@type='android.content.Intent'] and parameter[2][@type='android.content.ServiceConnection'] and parameter[3][@type='int']]/parameter[@name='p1']" name="name">serviceConnection</attr>
  <attr path="/api/package[@name='org.altbeacon.beacon']/interface[@name='BeaconConsumer']/method[@name='bindService' and count(parameter)=3 and parameter[1][@type='android.content.Intent'] and parameter[2][@type='android.content.ServiceConnection'] and parameter[3][@type='int']]/parameter[@name='p2']" name="name">flags</attr>
</metadata>
